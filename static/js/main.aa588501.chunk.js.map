{"version":3,"sources":["images/logo.svg","components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","headerLogo","alt","api","options","this","_address","address","_groupId","groupId","_token","token","fetch","headers","authorization","then","res","_checkServerResponse","inputName","name","inputJob","about","method","body","JSON","stringify","inputSRC","link","cardId","avatarSRC","avatar","ok","json","Promise","reject","status","Card","card","onCardClick","aria-label","type","onClick","likes","length","Main","props","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getCards","userData","cardsData","catch","err","console","log","onEditAvatar","onEditProfile","onAddPlace","map","_id","Footer","Date","getFullYear","PopupWithForm","isOpen","title","noValidate","children","saveButton","onClose","ImagePopup","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","selectedCard","setSelectedCard","closeAllPopups","id","placeholder","minLength","maxLength","required","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa588501.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.03b78ada.svg\";","import headerLogo from '../images/logo.svg'\n\nfunction Header() {\n    return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={headerLogo} alt=\"Логотип сервиса Mesto\"/>\n    </header>\n    )\n}\n\nexport default Header","class Api {\n    constructor(options) {\n        this._address = options.address\n        this._groupId = options.groupId\n        this._token = options.token\n    }\n    getUserInfo() {\n        return fetch(`${this._address}/${this._groupId}/users/me`, {\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            }\n        })\n         .then(res => this._checkServerResponse(res))\n    }\n\n    patchUserInfo({name: inputName, about: inputJob}) {\n        return fetch(`${this._address}/${this._groupId}/users/me`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: inputName,\n                about: inputJob,\n            })\n    })\n        .then(res => this._checkServerResponse(res))    \n    }\n\n    getCards() {\n        return fetch(`${this._address}/${this._groupId}/cards`, {\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => this._checkServerResponse(res)) \n    }\n    postCard({name: inputName, link: inputSRC}) {\n        return fetch(`${this._address}/${this._groupId}/cards`, {\n            method: 'POST',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: inputName,\n                link: inputSRC\n            })\n        })\n        .then(res => this._checkServerResponse(res)) \n        }\n    deleteCard(cardId){\n        return fetch(`${this._address}/${this._groupId}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token,\n            }\n        })\n        .then(res => this._checkServerResponse(res)) \n        }\n    setLike(cardId){\n        return fetch(`${this._address}/${this._groupId}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: {\n                authorization: this._token,\n            }\n        })\n        .then(res => this._checkServerResponse(res)) \n    }\n    deleteLike(cardId){\n        return fetch(`${this._address}/${this._groupId}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token,\n            }\n        })\n        .then(res => this._checkServerResponse(res)) \n    }\n    patchUserAvatar(avatarSRC) {\n        return fetch(`${this._address}/${this._groupId}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n               avatar: avatarSRC\n            })\n    })\n        .then(res => this._checkServerResponse(res))  \n    }\n\n    _checkServerResponse(res) {\n        if (res.ok) {\n            return res.json()\n        }\n    // Если происходит ошибка, отклоняем промис\n    return Promise.reject(`${res.status}`)\n    }\n}\n\nconst api = new Api({\n    address: 'https://mesto.nomoreparties.co/v1',\n    groupId: 'cohort-24',\n    token: '4d34d552-bc81-44cb-b18a-2296a1ced45f'\n  })\n\nexport default api","import React from 'react'\n\nfunction Card({ card, onCardClick }) {\n\n    function handleClick() {\n        onCardClick(card);\n    }\n\n    return (\n        <article className=\"element\">\n            <button aria-label=\"Удалить карточку\" type=\"button\" className=\"element__delete-button\" />\n            <img onClick={handleClick} className=\"element__image\" src={card.link} alt={`Крупным планом: ${card.name}`} />\n            <div className=\"element__place\">\n                <h2 className=\"element__title\">{card.name}</h2>\n                <div className=\"element__like-area\">\n                    <button aria-label=\"Оцените фотографию!\" type=\"button\" className=\"element__like-button\" />\n                    <span className=\"element__like-count\">{card.likes.length}</span>\n                </div>\n            </div>\n        </article>\n    )\n}\n\nexport default Card","import React from 'react'\nimport api from '../utils/api'\nimport Card from './Card'\n\nfunction Main(props) {\n\n  const [userName, setUserName] = React.useState('')\n  const [userDescription, setUserDescription] = React.useState('')\n  const [userAvatar, setUserAvatar] = React.useState('')\n  const [cards, setCards] = React.useState([])\n\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getCards()])\n      .then(([userData, cardsData]) => {\n        setUserName(userData.name)\n        setUserDescription(userData.about)\n        setUserAvatar(userData.avatar)\n        setCards(cardsData)\n      })\n      // Если сервер не ответил, выводим ошибку в консоль\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [])\n\n\n  return (\n    <main>\n      <section className=\"profile\">\n        <div className=\"profile__container\">\n          <div className=\"profile__photo-section\">\n            <img className=\"profile__avatar\" alt=\"Аватар\" src={userAvatar} onClick={props.onEditAvatar} />\n            <button\n              className=\"profile__icon\"\n              type=\"button\"\n              aria-label=\"Загрузка своего фото\"\n            >\n            </button>\n          </div>\n          <div className=\"profile__info\">\n            <div className=\"profile__zone\">\n              <h1 className=\"profile__title\">{userName}</h1>\n              <button\n                aria-label=\"Измените данные\"\n                type=\"button\"\n                className=\"profile__edit-button\"\n                onClick={props.onEditProfile} >\n              </button>\n            </div>\n            <p className=\"profile__caption\">{userDescription}</p>\n          </div>\n        </div>\n        <button\n          aria-label=\"Добавьте свою карточку!\"\n          type=\"button\"\n          className=\"profile__add-button\"\n          onClick={props.onAddPlace} >\n        </button>\n      </section>\n      <section className=\"elements\">\n        {cards.map(card =>\n          <Card\n            key={card._id}\n            card={card}\n            onCardClick={props.onCardClick}\n          />\n        )}\n      </section>\n    </main>\n  )\n}\n\nexport default Main","function Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; {new Date().getFullYear()} Mesto Russia</p>\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react';\n\nfunction PopupWithForm(props) {\n  return (\n    <div className={`popup ${props.isOpen && 'popup_active'}`}>\n      <div className=\"popup__container\">\n        <h2 className=\"popup__title\">{props.title}</h2>\n        <form name={props.name} className={`form form_type_${props.name}`} noValidate>\n          {props.children}\n          <button type=\"submit\" className=\"form__save-button\">{props.saveButton}</button>\n        </form>\n        <button onClick={props.onClose} aria-label=\"Отменить изменения\" type=\"button\"\n          className={`popup__close-button popup__close-button_type_${props.name}`} />\n      </div>\n    </div>\n  )\n}\n\nexport default PopupWithForm;\n","import React from 'react'\n\nfunction ImagePopup(props) {\n    return (\n        <div className={`popup ${props.card && 'popup_active'}`}>\n            <div className=\"popup__container popup__container_type_photo\">\n                <img className=\"popup__image\" src={`${props.card.link}`} alt={`Крупным планом ${props.card.name}`} />\n                <h2 className=\"popup__title popup__title_type_photo\">{props.card.name}</h2>\n                <button onClick={props.onClose}\n                    aria-label=\"Закрыть окно просмотра\" type=\"button\"\n                    className=\"popup__close-button popup__close-button_type_photo\" />\n            </div>\n        </div>\n    )\n}\n\nexport default ImagePopup","import React from 'react'\nimport '../index.css'\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport PopupWithForm from './PopupWithForm'\nimport ImagePopup from './ImagePopup'\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false)\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false)\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false)\n  const [selectedCard, setSelectedCard] = React.useState(false)\n\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true)\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true)\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false)\n    setEditProfilePopupOpen(false)\n    setAddPlacePopupOpen(false)\n    setSelectedCard(false)\n  }\n\n\n\n  return (\n    <div className=\"page__content\">\n      <Header />\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n      />\n      <Footer />\n\n      <PopupWithForm\n        name=\"edit\"\n        title=\"Редактировать профиль\"\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        children={\n          <>\n            <input type=\"text\" id=\"inputName\" name=\"inputName\"\n              placeholder=\"Введите Ваше имя\" className=\"form__input form__input_type_name\"\n              minLength={2} maxLength={40} required />\n            <span className=\"form__error\" id=\"inputName-error\" />\n            <input type=\"text\" id=\"inputJob\" name=\"inputJob\"\n              placeholder=\"Чем занимаетесь?\" className=\"form__input form__input_type_job\"\n              minLength={2} maxLength={200} required />\n            <span className=\"form__error\" id=\"inputJob-error\" />\n          </>\n        }\n        saveButton=\"Сохранить\"\n      />\n\n      <PopupWithForm\n        name=\"add\"\n        title=\"Новое место\"\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        children={\n          <>\n            <input type=\"text\" id=\"inputAddTitle\" name=\"inputAddTitle\"\n              placeholder=\"Название\" className=\"form__input form__input_type_addTitle\"\n              minLength={2} maxLength={30} required />\n            <span className=\"form__error\" id=\"inputAddTitle-error\" />\n            <input type=\"url\" id=\"inputURL\" name=\"inputURL\"\n              placeholder=\"Ссылка на картинку\" className=\"form__input form__input_type_addURL\" required />\n            <span className=\"form__error\" id=\"inputURL-error\" />\n          </>\n        }\n        saveButton=\"Сохранить\"\n      />\n\n      <PopupWithForm\n        name=\"delete\"\n        title=\"Вы уверены?\"\n        onClose={closeAllPopups}\n        children={\n          <>\n          </>\n        }\n        saveButton=\"Да\"\n      />\n\n      <PopupWithForm\n        name=\"avatar\"\n        title=\"Обновить аватар\"\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        children={\n          <>\n            <input type=\"url\" id=\"inputAvatar\" name=\"inputAvatar\"\n              placeholder=\"Ссылка на картинку\" className=\"form__input form__input_type_addAvatar\" required />\n            <span className=\"form__error\" id=\"inputAvatar-error\" />\n          </>\n        }\n        saveButton=\"Сохранить\"\n      />\n\n      <ImagePopup\n        card={selectedCard}\n        onClose={closeAllPopups}\n      />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}