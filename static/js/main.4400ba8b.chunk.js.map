{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/ImagePopup.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","headerLogo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onClick","onCardDelete","aria-label","type","onCardClick","link","name","onCardLike","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","Footer","Date","getFullYear","PopupWithForm","isOpen","title","onSubmit","noValidate","children","saveButton","onClose","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","id","placeholder","minLength","maxLength","required","onChange","evt","target","value","EditAvatarPopup","userAvatarRef","useRef","onUpdateAvatar","current","ref","ImagePopup","api","options","this","_address","address","_groupId","groupId","_token","token","fetch","headers","authorization","then","res","_checkServerResponse","inputName","inputJob","method","body","JSON","stringify","inputSRC","cardId","setLike","deleteLike","userData","ok","json","Promise","reject","status","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","getCards","apiData","catch","err","console","log","getUserInfo","Provider","changeLikeCardStatus","newCard","state","c","deleteCard","filter","patchUserInfo","patchUserAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4400ba8b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.03b78ada.svg\";","import headerLogo from '../images/logo.svg'\n\nfunction Header() {\n    return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={headerLogo} alt=\"Логотип сервиса Mesto\"/>\n    </header>\n    )\n}\n\nexport default Header","import React from 'react'\n\n// Экспортируе новый объект контекста\n\nexport const CurrentUserContext = React.createContext();","import React from 'react'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction Card(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = props.card.owner._id === currentUser._id;\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    const cardDeleteButtonClassName = (\n        `element__delete-button ${isOwn ? '' : 'element__delete-button_type_hidden'}`\n    );\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\n    const cardLikeButtonClassName = (\n        `element__like-button ${isLiked ? 'element__like-button_active' : ''}`\n    );\n\n    function handleClick() {\n        props.onCardClick(props.card);\n    }\n\n    function handleLikeClick() {\n        props.onCardLike(props.card)\n    }\n\n    function handleDeleteClick() {\n        props.onCardDelete(props.card)\n    }\n\n    return (\n        <article className=\"element\">\n            <button onClick={handleDeleteClick} aria-label=\"Удалить карточку\" type=\"button\" className={cardDeleteButtonClassName} />\n            <img onClick={handleClick} className=\"element__image\" src={props.card.link} alt={`Крупным планом: ${props.card.name}`} />\n            <div className=\"element__place\">\n                <h2 className=\"element__title\">{props.card.name}</h2>\n                <div className=\"element__like-area\">\n                    <button onClick={handleLikeClick} aria-label=\"Оцените фотографию!\" type=\"button\"\n                        className={cardLikeButtonClassName} />\n                    <span className=\"element__like-count\">{props.card.likes.length}</span>\n                </div>\n            </div>\n        </article>\n    )\n}\n\nexport default Card","import React from 'react'\nimport Card from './Card'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction Main(props) {\n\n    //   const [userName, setUserName] = React.useState('')\n    //   const [userDescription, setUserDescription] = React.useState('')\n    //   const [userAvatar, setUserAvatar] = React.useState('')\n    const currentUser = React.useContext(CurrentUserContext);\n    //   React.useEffect(() => {\n    //     Promise.all([api.getUserInfo(), api.getCards()])\n    //       .then(([userData, cardsData]) => {\n    //         setUserName(userData.name)\n    //         setUserDescription(userData.about)\n    //         setUserAvatar(userData.avatar)\n    //         setCards(cardsData)\n    //       })\n    //       // Если сервер не ответил, выводим ошибку в консоль\n    //       .catch((err) => {\n    //         console.log(err)\n    //       })\n    //   }, [])\n\n\n    return (\n        <main>\n            <section className=\"profile\">\n                <div className=\"profile__container\">\n                    <div className=\"profile__photo-section\">\n                        <img className=\"profile__avatar\" alt=\"Аватар\" src={currentUser.avatar} onClick={props.onEditAvatar} />\n                        <button\n                            className=\"profile__icon\"\n                            type=\"button\"\n                            aria-label=\"Загрузка своего фото\"\n                        >\n                        </button>\n                    </div>\n                    <div className=\"profile__info\">\n                        <div className=\"profile__zone\">\n                            <h1 className=\"profile__title\">{currentUser.name}</h1>\n                            <button\n                                aria-label=\"Измените данные\"\n                                type=\"button\"\n                                className=\"profile__edit-button\"\n                                onClick={props.onEditProfile} >\n                            </button>\n                        </div>\n                        <p className=\"profile__caption\">{currentUser.about}</p>\n                    </div>\n                </div>\n                <button\n                    aria-label=\"Добавьте свою карточку!\"\n                    type=\"button\"\n                    className=\"profile__add-button\"\n                    onClick={props.onAddPlace} >\n                </button>\n            </section>\n            <section className=\"elements\">\n                {props.cards.map(card =>\n                    <Card\n                        key={card._id}\n                        card={card}\n                        onCardClick={props.onCardClick}\n                        onCardLike={props.onCardLike}\n                        onCardDelete={props.onCardDelete}\n                    />\n                )}\n            </section>\n        </main>\n    )\n}\n\nexport default Main","function Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; {new Date().getFullYear()} Mesto Russia</p>\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react'\n\nfunction PopupWithForm(props) {\n    return (\n        <div className={`popup ${props.isOpen && 'popup_active'}`}>\n            <div className=\"popup__container\">\n                <h2 className=\"popup__title\">{props.title}</h2>\n                <form\n                    name={props.name}\n                    className={`form form_type_${props.name}`}\n                    onSubmit={props.onSubmit}\n                    noValidate\n                >\n                    {props.children}\n                    <button type=\"submit\" className=\"form__save-button\">{props.saveButton}</button>\n                </form>\n                <button onClick={props.onClose} aria-label=\"Отменить изменения\" type=\"button\"\n                    className={`popup__close-button popup__close-button_type_${props.name}`} />\n            </div>\n        </div>\n    )\n}\n\nexport default PopupWithForm;\n","import React from 'react'\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction EditProfilePopup(props) {\n\n    const [name, setName] = React.useState('')\n    const [description, setDescription] = React.useState('')\n\n    // Подписка на контекст\n    const currentUser = React.useContext(CurrentUserContext);\n\n    // После загрузки текущего пользователя из API\n    // его данные будут использованы в управляемых компонентах.\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleSubmit(e) {\n        // Запрещаем браузеру переходить по адресу формы\n        e.preventDefault();\n\n        // Передаём значения управляемых компонентов во внешний обработчик\n        props.onUpdateUser({\n            name: name,\n            about: description,\n        });\n    }\n\n    function handleChangeName(evt) {\n        setName(evt.target.value)\n    }\n\n    function handleChangeJob(evt) {\n        setDescription(evt.target.value)\n    }\n\n    return (\n        <PopupWithForm\n            name=\"edit\"\n            title=\"Редактировать профиль\"\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n            saveButton=\"Сохранить\"\n        >\n            <input\n                type=\"text\" id=\"inputName\" name=\"inputName\"\n                placeholder=\"Введите Ваше имя\"\n                className=\"form__input form__input_type_name\"\n                minLength={2} maxLength={40} required\n                onChange={handleChangeName}\n            />\n            <span className=\"form__error\" id=\"inputName-error\" />\n            <input type=\"text\" id=\"inputJob\" name=\"inputJob\"\n                placeholder=\"Чем занимаетесь?\"\n                className=\"form__input form__input_type_job\"\n                minLength={2} maxLength={200} required\n                onChange={handleChangeJob} />\n            <span className=\"form__error\" id=\"inputJob-error\" />\n        </PopupWithForm>\n\n        // <div className={`popup ${props.isOpen && 'popup_active'}`}>\n        //     <div className=\"popup__container\">\n        //         <h2 className=\"popup__title\">{props.title}</h2>\n        //         <form name={props.name} className={`form form_type_${props.name}`} noValidate>\n        //             {props.children}\n        //             <button type=\"submit\" className=\"form__save-button\">{props.saveButton}</button>\n        //         </form>\n        //         <button onClick={props.onClose} aria-label=\"Отменить изменения\" type=\"button\"\n        //             className={`popup__close-button popup__close-button_type_${props.name}`} />\n        //     </div>\n        // </div>\n    )\n}\n\nexport default EditProfilePopup;\n","import React from 'react'\nimport PopupWithForm from './PopupWithForm'\n\nfunction EditAvatarPopup(props) {\n\n    const userAvatarRef = React.useRef('');\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        props.onUpdateAvatar({\n            avatar: userAvatarRef.current.value\n        });\n        // console.log(userAvatarRef.current.value)\n    }\n\n    return (\n        <PopupWithForm\n            name=\"avatar\"\n            title=\"Обновить аватар\"\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            saveButton=\"Сохранить\"\n            onSubmit={handleSubmit}\n        >\n            <input ref={userAvatarRef} type=\"url\" id=\"inputAvatar\"\n                name=\"inputAvatar\" placeholder=\"Ссылка на картинку\"\n                className=\"form__input form__input_type_addAvatar\"\n                required />\n            <span className=\"form__error\" id=\"inputAvatar-error\" />\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup;","import React from 'react'\n\nfunction ImagePopup({card, isOpen, onClose}) {\n    return (\n        <div className={`popup ${card && isOpen ? 'popup_active' : ''}`}>\n            <div className=\"popup__container popup__container_type_photo\">\n                <img className=\"popup__image\" src={`${card.link}`} alt={`Крупным планом ${card.name}`} />\n                <h2 className=\"popup__title popup__title_type_photo\">{card.name}</h2>\n                <button onClick={onClose}\n                    aria-label=\"Закрыть окно просмотра\" type=\"button\"\n                    className=\"popup__close-button popup__close-button_type_photo\" />\n            </div>\n        </div>\n    )\n}\n\nexport default ImagePopup","class Api {\n    constructor(options) {\n        this._address = options.address\n        this._groupId = options.groupId\n        this._token = options.token\n    }\n    getUserInfo() {\n        return fetch(`${this._address}/${this._groupId}/users/me`, {\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => this._checkServerResponse(res))\n    }\n\n    patchUserInfo({ name: inputName, about: inputJob }) {\n        return fetch(`${this._address}/${this._groupId}/users/me`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: inputName,\n                about: inputJob,\n            })\n        })\n            .then(res => this._checkServerResponse(res))\n    }\n\n    getCards() {\n        return fetch(`${this._address}/${this._groupId}/cards`, {\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => this._checkServerResponse(res))\n    }\n\n    postCard({ name: inputName, link: inputSRC }) {\n        return fetch(`${this._address}/${this._groupId}/cards`, {\n            method: 'POST',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: inputName,\n                link: inputSRC\n            })\n        })\n            .then(res => this._checkServerResponse(res))\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._address}/${this._groupId}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token,\n            }\n        })\n            .then(res => this._checkServerResponse(res))\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if (!isLiked) {\n            return this.deleteLike(cardId);\n        } else {\n            return this.setLike(cardId);\n        }\n    }\n\n    setLike(cardId) {\n        return fetch(`${this._address}/${this._groupId}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: {\n                authorization: this._token,\n            }\n        })\n            .then(res => this._checkServerResponse(res))\n    }\n\n    deleteLike(cardId) {\n        return fetch(`${this._address}/${this._groupId}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token,\n            }\n        })\n            .then(res => this._checkServerResponse(res))\n    }\n    patchUserAvatar(userData) {\n        return fetch(`${this._address}/${this._groupId}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                avatar: userData.avatar\n            })\n        })\n            .then(res => this._checkServerResponse(res))\n    }\n\n    _checkServerResponse(res) {\n        if (res.ok) {\n            return res.json()\n        }\n        // Если происходит ошибка, отклоняем промис\n        return Promise.reject(`${res.status}`)\n    }\n}\n\nconst api = new Api({\n    address: 'https://mesto.nomoreparties.co/v1',\n    groupId: 'cohort-24',\n    token: '4d34d552-bc81-44cb-b18a-2296a1ced45f'\n})\n\nexport default api","import React from 'react'\nimport '../index.css'\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport PopupWithForm from './PopupWithForm'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport ImagePopup from './ImagePopup'\nimport api from '../utils/api'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false)\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false)\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false)\n    const [isImagePopupOpen, setImagePopupOpen] = React.useState(false)\n    const [selectedCard, setSelectedCard] = React.useState({})\n    const [currentUser, setCurrentUser] = React.useState('')\n    const [cards, setCards] = React.useState([])\n\n    React.useEffect(() => {\n        api.getCards()\n            .then((apiData) => {\n                setCards(apiData)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards((state) => state.filter((c) => c !== card))\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    React.useEffect(() => {\n        api.getUserInfo()\n            .then((userData) => {\n                setCurrentUser(userData)\n            })\n            // Если сервер не ответил, выводим ошибку в консоль\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n    function handleUpdateUser(userData) {\n        api.patchUserInfo(userData)\n            .then((userData) => {\n                setCurrentUser(userData)\n                // console.log(userData)\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleUpdateAvatar(userData) {\n        api.patchUserAvatar(userData)\n            .then((userData) => {\n                setCurrentUser(userData)\n                // console.log(userData)\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopupOpen(true)\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupOpen(true)\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupOpen(true)\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n        setImagePopupOpen(true)\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupOpen(false)\n        setEditProfilePopupOpen(false)\n        setAddPlacePopupOpen(false)\n        setImagePopupOpen(false)\n        setSelectedCard({})\n    }\n\n    return (\n        <div className=\"page__content\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header />\n                <Main\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onCardClick={handleCardClick}\n                />\n                <Footer />\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onUpdateUser={handleUpdateUser}\n                    onClose={closeAllPopups}\n                />\n                {/* <PopupWithForm\n                    name=\"edit\"\n                    title=\"Редактировать профиль\"\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    children={\n                        <>\n                            <input type=\"text\" id=\"inputName\" name=\"inputName\"\n                                placeholder=\"Введите Ваше имя\" className=\"form__input form__input_type_name\"\n                                minLength={2} maxLength={40} required />\n                            <span className=\"form__error\" id=\"inputName-error\" />\n                            <input type=\"text\" id=\"inputJob\" name=\"inputJob\"\n                                placeholder=\"Чем занимаетесь?\" className=\"form__input form__input_type_job\"\n                                minLength={2} maxLength={200} required />\n                            <span className=\"form__error\" id=\"inputJob-error\" />\n                        </>\n                    }\n                    saveButton=\"Сохранить\"\n                /> */}\n\n                <PopupWithForm\n                    name=\"add\"\n                    title=\"Новое место\"\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    children={\n                        <>\n                            <input type=\"text\" id=\"inputAddTitle\" name=\"inputAddTitle\"\n                                placeholder=\"Название\" className=\"form__input form__input_type_addTitle\"\n                                minLength={2} maxLength={30} required />\n                            <span className=\"form__error\" id=\"inputAddTitle-error\" />\n                            <input type=\"url\" id=\"inputURL\" name=\"inputURL\"\n                                placeholder=\"Ссылка на картинку\" className=\"form__input form__input_type_addURL\" required />\n                            <span className=\"form__error\" id=\"inputURL-error\" />\n                        </>\n                    }\n                    saveButton=\"Сохранить\"\n                />\n\n                <PopupWithForm\n                    name=\"delete\"\n                    title=\"Вы уверены?\"\n                    onClose={closeAllPopups}\n                    children={\n                        <>\n                        </>\n                    }\n                    saveButton=\"Да\"\n                />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onUpdateAvatar={handleUpdateAvatar}\n                    onClose={closeAllPopups}\n                />\n\n                {/* <PopupWithForm\n                    name=\"avatar\"\n                    title=\"Обновить аватар\"\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    children={\n                        <>\n                            <input type=\"url\" id=\"inputAvatar\" name=\"inputAvatar\"\n                                placeholder=\"Ссылка на картинку\" className=\"form__input form__input_type_addAvatar\" required />\n                            <span className=\"form__error\" id=\"inputAvatar-error\" />\n                        </>\n                    }\n                    saveButton=\"Сохранить\"\n                /> */}\n\n                <ImagePopup\n                    card={selectedCard}\n                    isOpen={isImagePopupOpen}\n                    onClose={closeAllPopups}\n                />\n            </CurrentUserContext.Provider>\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}